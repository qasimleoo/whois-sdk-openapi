# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .post_v_20_dns_bulk_live_response_bulk_dns_info_item_dns_records_item import (
    PostV20DnsBulkLiveResponseBulkDnsInfoItemDnsRecordsItem,
)
from .post_v_20_dns_bulk_live_response_bulk_dns_info_item_dns_types import (
    PostV20DnsBulkLiveResponseBulkDnsInfoItemDnsTypes,
)


class PostV20DnsBulkLiveResponseBulkDnsInfoItem(UniversalBaseModel):
    status: typing.Optional[bool] = None
    query_time: typing.Optional[dt.datetime] = None
    ip_address: typing.Optional[str] = None
    domain_name: typing.Optional[str] = None
    dns_types: typing.Optional[PostV20DnsBulkLiveResponseBulkDnsInfoItemDnsTypes] = None
    dns_records: typing.Optional[typing.List[PostV20DnsBulkLiveResponseBulkDnsInfoItemDnsRecordsItem]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
