# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .get_v_20_dns_historical_response_historical_dns_records_item import (
    GetV20DnsHistoricalResponseHistoricalDnsRecordsItem,
)


class GetV20DnsHistoricalResponse(UniversalBaseModel):
    total_records: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="totalRecords")] = None
    total_pages: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="totalPages")] = None
    current_page: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="currentPage")] = None
    historical_dns_records: typing_extensions.Annotated[
        typing.Optional[typing.List[GetV20DnsHistoricalResponseHistoricalDnsRecordsItem]],
        FieldMetadata(alias="historicalDnsRecords"),
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
