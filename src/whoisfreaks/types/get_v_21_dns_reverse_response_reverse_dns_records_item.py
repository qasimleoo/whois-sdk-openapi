# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .get_v_21_dns_reverse_response_reverse_dns_records_item_dns_records_item import (
    GetV21DnsReverseResponseReverseDnsRecordsItemDnsRecordsItem,
)
from .get_v_21_dns_reverse_response_reverse_dns_records_item_dns_types import (
    GetV21DnsReverseResponseReverseDnsRecordsItemDnsTypes,
)


class GetV21DnsReverseResponseReverseDnsRecordsItem(UniversalBaseModel):
    query_time: typing.Optional[dt.datetime] = None
    domain_name: typing.Optional[str] = None
    dns_types: typing.Optional[GetV21DnsReverseResponseReverseDnsRecordsItemDnsTypes] = None
    dns_records: typing.Optional[typing.List[GetV21DnsReverseResponseReverseDnsRecordsItemDnsRecordsItem]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
