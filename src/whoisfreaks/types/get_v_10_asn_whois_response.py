# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .get_v_10_asn_whois_response_administrative_contacts_item import GetV10AsnWhoisResponseAdministrativeContactsItem
from .get_v_10_asn_whois_response_as_blocks_item import GetV10AsnWhoisResponseAsBlocksItem
from .get_v_10_asn_whois_response_aut_nums_item import GetV10AsnWhoisResponseAutNumsItem
from .get_v_10_asn_whois_response_organization import GetV10AsnWhoisResponseOrganization
from .get_v_10_asn_whois_response_technical_contacts_item import GetV10AsnWhoisResponseTechnicalContactsItem


class GetV10AsnWhoisResponse(UniversalBaseModel):
    status: typing.Optional[bool] = None
    as_number: typing.Optional[str] = None
    query_time: typing.Optional[str] = None
    whois_server: typing.Optional[str] = None
    as_blocks: typing.Optional[typing.List[GetV10AsnWhoisResponseAsBlocksItem]] = None
    aut_nums: typing.Optional[typing.List[GetV10AsnWhoisResponseAutNumsItem]] = None
    organization: typing.Optional[GetV10AsnWhoisResponseOrganization] = None
    administrative_contacts: typing.Optional[typing.List[GetV10AsnWhoisResponseAdministrativeContactsItem]] = None
    technical_contacts: typing.Optional[typing.List[GetV10AsnWhoisResponseTechnicalContactsItem]] = None
    whois_raw_response: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
