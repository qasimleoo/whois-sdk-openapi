# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .get_v_10_whois_response_registry_data import GetV10WhoisResponseRegistryData
from .get_v_10_whois_response_status import GetV10WhoisResponseStatus
from .get_v_10_whois_response_whois_domains_historical_item import GetV10WhoisResponseWhoisDomainsHistoricalItem


class GetV10WhoisResponse(UniversalBaseModel):
    status: typing.Optional[GetV10WhoisResponseStatus] = None
    domain_name: typing.Optional[str] = None
    whois_server: typing.Optional[str] = None
    domain_registered: typing.Optional[str] = None
    query_time: typing.Optional[str] = None
    create_date: typing.Optional[str] = None
    expiry_date: typing.Optional[str] = None
    update_date: typing.Optional[str] = None
    domain_registrar: typing.Optional[typing.Dict[str, str]] = None
    reseller_contact: typing.Optional[typing.Dict[str, str]] = None
    registrant_contact: typing.Optional[typing.Dict[str, str]] = None
    administrative_contact: typing.Optional[typing.Dict[str, str]] = None
    technical_contact: typing.Optional[typing.Dict[str, str]] = None
    billing_contact: typing.Optional[typing.Dict[str, str]] = None
    name_servers: typing.Optional[typing.List[str]] = None
    domain_status: typing.Optional[typing.List[str]] = None
    whois_raw_domain: typing.Optional[str] = None
    registry_data: typing.Optional[GetV10WhoisResponseRegistryData] = None
    raw_response: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="rawResponse")] = None
    whois: typing.Optional[str] = None
    total_records: typing.Optional[str] = None
    total_result: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="total_Result")] = None
    total_pages: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="total_Pages")] = None
    current_page: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="current_Page")] = None
    whois_domains_historical: typing.Optional[typing.List[GetV10WhoisResponseWhoisDomainsHistoricalItem]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
